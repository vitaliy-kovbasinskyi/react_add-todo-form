{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todos","classNames","TodoList","props","map","todo","Fragment","getUser","usersFromServer","find","App","useState","setTitle","selectedUser","setSelectedUser","errorTitle","setErrorTitle","errorUserSelect","setErrorUserSelect","todosFromServer","setTodos","action","method","onSubmit","event","preventDefault","length","filter","trim","type","placeholder","value","onChange","target","disabled","selected","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.20377110.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../react-app-env';\n\ntype Props = {\n  user: User | null\n};\n\nexport const UserInfo: React.FC<Props> = (user) => {\n  return (\n    <a className=\"UserInfo\" href={user.user?.email}>\n      {user.user?.name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../react-app-env';\n\ntype Props = {\n  todos: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todos }) => {\n  const {\n    completed,\n    id,\n    title,\n    user,\n  } = todos;\n\n  return (\n    <li\n      data-id=\"1\"\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n      key={id}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <UserInfo user={user} />\n    </li>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../react-app-env';\n\ntype Props = {\n  props: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = (props) => {\n  return (\n    <ul className=\"TodoList\">\n      {props.props.map(todo => (\n        <React.Fragment key={todo.id}>\n          <TodoInfo todos={todo} />\n        </React.Fragment>\n      ))}\n    </ul>\n  );\n};\n","import './App.scss';\n\nimport React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './react-app-env';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState(0);\n\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [errorUserSelect, setErrorUserSelect] = useState(false);\n\n  const [todos, setTodos] = useState(todosFromServer.map(todo => ({\n    ...todo,\n    user: getUser(todo.userId),\n  })));\n\n  const submitHandler = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setTodos([...todos, {\n      id: todosFromServer.length,\n      title,\n      completed: false,\n      userId: +selectedUser,\n      user: getUser(+selectedUser),\n    }].filter(todo => todo.title.trim() !== '' && todo.userId !== 0));\n\n    if (selectedUser !== 0) {\n      setTitle('');\n    }\n\n    if (title !== '') {\n      setSelectedUser(0);\n    }\n\n    setErrorTitle(title === '' && true);\n    setErrorUserSelect(selectedUser === 0 && true);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={submitHandler}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={(event) => {\n                setTitle(event.target.value);\n                setErrorTitle(false);\n              }}\n            />\n            {errorTitle && (\n              <span className=\"error\">Please enter a title</span>\n            )}\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              value={selectedUser}\n              onChange={(event) => {\n                setSelectedUser(+event.target.value);\n                setErrorUserSelect(false);\n              }}\n            >\n              <option\n                value=\"0\"\n                disabled\n                selected\n              >\n                Choose a user\n              </option>\n              {usersFromServer.map(user => (\n                <option value={user.id} key={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n\n            {errorUserSelect && (\n              <span className=\"error\">Please choose a user</span>\n            )}\n          </label>\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList props={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}